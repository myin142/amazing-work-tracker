openapi: 3.0.3
info:
    title: Time Booking
    version: 1.0.1
    description: Time Booking API for IMS
    contact:
        name: Tobias Demmer
        email: tobias.demmer@it-experts.at
servers:
    -   url: https://ims-dev.it-experts.at/ims/api/v1
        description: Dev Server
    -   url: https://ims.it-experts.at/ims/api/v1
        description: Prod server
paths:
    /time-booking:
        get:
            parameters:
                -   $ref: '#/components/parameters/fromDateParam'
                -   $ref: '#/components/parameters/toDateParam'
                -   $ref: '#/components/parameters/employeeIdParam'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GETTimeBookingResponse'
                    description: Successful
                '400':
                    $ref: '#/components/responses/ErrorResponse'
            operationId: time_bookingGet
            summary: Get time bookings within a date range (from-to)

        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TimeSpanWithoutID'
                required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeSpanWithID'
                    description: Successful
                '400':
                    $ref: '#/components/responses/ErrorResponse'
            operationId: time_bookingPost
            summary: Save a time booking

    /csv:
        get:
            parameters:
                -   $ref: '#/components/parameters/fromDateParam'
                -   $ref: '#/components/parameters/toDateParam'
                -   name: exportEmployeeId
                    description: 'ID of employee to export CSV for'
                    schema:
                        format: int64
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        text/csv:
                            schema:
                                type: string
                                format: byte
                    description: CSV File as Blob
            operationId: csvGet
            summary: Export timebookings as CSV file

    /project-time-booking:
        get:
            parameters:
                -   $ref: '#/components/parameters/fromDateParam'
                -   $ref: '#/components/parameters/toDateParam'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GETProjectTimeSpansResponse'
                    description: Successful
                '400':
                    $ref: '#/components/responses/ErrorResponse'
                '404':
                    description: Project not found
            operationId: project_time_bookingGet
            summary: Get project timespans within a date range (from-to)

        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PUTPOSTProjectTimeSpansRequest'
                required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectDateTimeSpans'
                    description: Success
                '400':
                    $ref: '#/components/responses/ErrorResponse'
            operationId: project_time_bookingPut
            summary: Update project time booking

        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PUTPOSTProjectTimeSpansRequest'
                required: true
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProjectDateTimeSpans'
                    description: Successful
                '400':
                    $ref: '#/components/responses/ErrorResponse'
                '403':
                    description: Forbidden
            operationId: project_time_bookingPost
            summary: Saves project time booking

        delete:
            parameters:
                -   name: day
                    description: 'Date of project time e.g. 2022-01-30'
                    schema:
                        type: string
                        format: date
                        example: '2022-12-30'
                    in: query
                    required: true
                -   name: project
                    description: 'Project ID'
                    schema:
                        format: int64
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DELETEProjectTimeBookingResponse'
                    description: Successful
                '400':
                    $ref: '#/components/responses/ErrorResponse'
                '403':
                    description: Forbidden
            operationId: project_time_bookingDelete
            summary: Delete project time booking

    '/time-booking/{timeSpanId}':
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeSpanWithID'
                    description: Successful
                '403':
                    description: Forbidden
                '404':
                    description: TimeSpanId not found
            operationId: time_bookingTimeSpanIdGet
            summary: Get time booking by ID

        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TimeSpanWithoutID'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeSpanWithID'
                    description: Successful
                '304':
                    description: Not modified
                '400':
                    $ref: '#/components/responses/ErrorResponse'
                '403':
                    description: Forbidden
                '404':
                    description: TimeSpanId not found
            operationId: time_bookingTimeSpanIdPut
            summary: Update time span

        delete:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TimeSpanWithID'
                    description: Successful
                '403':
                    description: Forbidden
                '404':
                    description: TimeSpanId not found
            operationId: time_bookingTimeSpanIdDelete
            summary: Delete time booking by ID

        parameters:
            -   name: timeSpanId
                schema:
                    format: int64
                    type: integer
                in: path
                required: true
                example: 1

    /project-time-booking/not-booked:
        get:
            parameters:
                -   $ref: '#/components/parameters/fromDateParam'
                -   $ref: '#/components/parameters/toDateParam'
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GETNotBookedTimeResponse'
                    description: Successful
            operationId: project_time_bookingNotBookedGet
            summary: Get all non-booked time periods within from and to date

    /project:
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GETProjectResponse'
                    description: Successful
            operationId: projectGet
            summary: Get all available projects to book time on for the current user

    /time-booking/commit:
        patch:
            parameters:
                -   name: boss
                    description: 'Sets the boss lock'
                    schema:
                        type: boolean
                        example: true
                    in: query
                -   name: withdraw
                    description: 'Un-do the submit of the current timesheet by setting withdraw to true'
                    schema:
                        type: boolean
                        example: true
                    in: query
                -   $ref: '#/components/parameters/fromDateParam'
                -   $ref: '#/components/parameters/toDateParam'
                -   name: employee
                    description: 'Employee ID'
                    schema:
                        format: int64
                        type: integer
                    in: query

            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PatchTimeBookingCommitResponse'
                    description: Successful
                '400':
                    $ref: '#/components/responses/ErrorResponse'
                '403':
                    description: Forbidden
            operationId: time_bookingCommitPatch
            summary: Submit/withdraw time booking
    /userinfo/me:
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GETUserinfoResponse'
                    description: OK
            description: Gets information about the related employee with the api key
components:
    parameters:
        employeeIdParam:
            in: query
            name: employeeId
            required: false
            schema:
                type: integer
            description: 'Access timebooking of another employee. Only allowed for boss. Example: 1'

        fromDateParam:
            in: query
            name: fromDate
            required: true
            schema:
                type: string
                format: date
                example: '2022-01-01'
            description: 'Example: 2022-01-01'

        toDateParam:
            in: query
            name: toDate
            required: true
            schema:
                type: string
                format: date
                example: '2022-01-31'
            description: 'Example: 2022-01-31'

    schemas:
        TimeSpanWithID:
            description: 'Time span object with ID'
            type: object
            allOf: # Has warning but still works. Related https://github.com/OpenAPITools/openapi-generator/issues/10010
                -   required:
                        - id
                    type: object
                    properties:
                        userlock:
                            description: 'Enables/disables the user lock. The user lock is used to lock a given date span for the current user. This prohibits any further editing of timebookings.'
                            type: boolean
                            example: true
                        bosslock:
                            description: 'Enables/disables the boss lock. The boss lock is used by the admin to lock and finalize a given date span for a user. This prohibits any further editing of timebookings by the user.'
                            type: boolean
                            example: true
                        id:
                            format: int64
                            description: 'Time span ID'
                            type: integer
                -   $ref: '#/components/schemas/TimeSpanWithoutID'

        TimeSpanTypeEnum:
            description: 'Enum for timespan types'
            enum:
                - WORK
                - FULL_DAY_VACATION
                - HALF_DAY_VACATION
                - SICK_LEAVE
                - BREAK
                - OFF_DUTY
                - ON_CALL_DUTY
                - SPECIAL_WORK
            type: string
            example: "SICK_LEAVE"

        OffDutyReasonEnum:
            description: 'Off-duty reason'
            enum:
                - CHILDBIRTH_OF_PARTNER
                - DECEASE_OF_PARTNER
                - DECEASE_OF_PARTNER_SAME_HOUSEHOLD
                - DECEASE_OF_PARENT
                - DECEASE_OF_CHILD
                - DECEASE_OF_SIBLING_GRANDPARENT_PARENTS_IN_LAW
                - MARRIAGE_PARTNERSHIP
                - MARRIAGE_PARTNERSHIP_OF_SIBLING_CHILD_PARENT
                - CHANGE_OF_RESIDENCE
                - OTHER
            example: "CHILDBIRTH_OF_PARTNER"

        NotBookedTimePeriod:
            description: 'Time periods that has no booking'
            required:
                - date
                - timePeriods
            type: object
            properties:
                date:
                    type: string
                    format: date
                    description: 'Date of time period e.g. 2022-01-30'
                    example: '2022-01-30'
                timePeriods:
                    description: 'Array of time periods'
                    type: array
                    items:
                        $ref: '#/components/schemas/TimePeriod'

        GETProjectResponse:
            description: ''
            type: object
            properties:
                projects:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectNameIDMap'

        GETProjectTimeSpansResponse:
            description: ''
            type: object
            properties:
                projectTimeSpans:
                    description: 'Array of time spans'
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectDateTimeSpans'

        GETTimeBookingResponse:
            description: ''
            type: object
            properties:
                timeSpans:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/TimeSpanWithID'

        GETNotBookedTimeResponse:
            description: ''
            required:
                - timePeriods
            type: object
            properties:
                timePeriods:
                    description: 'Time periods'
                    type: array
                    items:
                        $ref: '#/components/schemas/NotBookedTimePeriod'

        ProjectTimeSpan:
            description: ''
            required:
                - fromTime
                - toTime
            type: object
            properties:
                fromTime:
                    $ref: '#/components/schemas/Time'
                toTime:
                    $ref: '#/components/schemas/Time'
                comment:
                    description: 'Comment for project time span'
                    type: string
                    maxLength: 1000
                    example: "I did some work!"

        ProjectDateTimeSpans:
            description: 'Project date time spans'
            required:
                - date
                - project
                - timeSpans
            type: object
            properties:
                date:
                    type: string
                    format: date
                    description: 'Date of project date time spans'
                    example: '2022-12-30'
                project:
                    $ref: '#/components/schemas/ProjectID'
                timeSpans:
                    description: 'Timespans'
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectTimeSpan'
                userlock:
                    description: 'Enables/disables the user lock. The user lock is used to lock a given date span for the current user. This prohibits any further editing of timebookings.'
                    type: boolean
                bosslock:
                    description: 'Enables/disables the boss lock. The boss lock is used by the admin to lock and finalize a given date span for a user. This prohibits any further editing of timebookings by the user.'
                    type: boolean

        TimeSpanWithoutID:
            description: 'Timespan object without ID'
            required:
                - date
                - type
            type: object
            properties:
                date:
                    type: string
                    format: date
                    description: 'Date e.g. 2022-01-30'
                    example: '2022-12-30'
                type:
                    $ref: '#/components/schemas/TimeSpanTypeEnum'
                fromTime:
                    $ref: '#/components/schemas/Time'
                toTime:
                    $ref: '#/components/schemas/Time'
                homeoffice:
                    description: 'Whether this time has been spent in Homeoffice or not'
                    type: boolean
                offDutyReason:
                    $ref: '#/components/schemas/OffDutyReasonEnum'

        PUTTimeBookingRequest:
            description: ''
            type: object
            properties:
                timeSpans:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/PUTTimeBookingTimeSpan'

        PUTTimeBookingTimeSpan:
            description: ''
            required:
                - id
                - type
            type: object
            properties:
                type:
                    $ref: '#/components/schemas/TimeSpanTypeEnum'
                date:
                    type: string
                    format: date
                    description: 'Date of timebooking span'
                    example: '2022-12-30'
                toTime:
                    $ref: '#/components/schemas/Time'
                fromTime:
                    $ref: '#/components/schemas/Time'
                id:
                    format: int64
                    description: ''
                    type: integer

        ProjectID:
            format: int64
            description: 'Project ID'
            type: integer
        ProjectNameIDMap:
            description: 'Project name and ID map'
            type: object
            properties:
                projectId:
                    $ref: '#/components/schemas/ProjectID'
                projectName:
                    description: 'Project name'
                    example: 'IT-Experts Intern'
                    type: string

        DELETEProjectTimeBookingResponse:
            description: ''
            type: object
            properties:
                projectTimeSpans:
                    description: 'Project time spans'
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectDateTimeSpans'

        ErrorCodeEnum:
            description: ''
            enum:
                - EXISTING_PROJECT_BOOKINGS
                - OVERLAPPING_TIME
                - TIME_OUT_OF_BOUNDS
                - TIME_LIMIT_EXCEEDED
                - ILLEGAL_TIME_BOUNDS
                - UNBOOKED_TIME
                - OPERATION_NOT_PERMITTED
                - ILLEGAL_DATE
                - VALIDATION_ERROR
                - EXISTING_VACATION
                - EXISTING_OFF_DUTY
                - EXISTING_SICK_LEAVE
                - EXISTING_TIME_BOOKING_ENTRIES
                - USER_LOCKED
                - BOSS_LOCKED
                - PROJECT_NOT_FOUND
            type: string

        Time:
            description: 'Time Format in a 00:00 - 23:45 range, in 15 min units'
            pattern: '^([01][0-9]|2[0-3]):(15|30|45|00)$'
            type: string
            example: '15:30'

        TimeBookingError:
            description: ''
            required:
                - code
            type: object
            properties:
                message:
                    description: 'Error message'
                    type: string
                    example: "Existing project bookings not covered by existing time bookings"
                code:
                    $ref: '#/components/schemas/ErrorCodeEnum'

        TimePeriod:
            description: ''
            required:
                - fromTime
                - toTime
            type: object
            properties:
                fromTime:
                    $ref: '#/components/schemas/Time'
                toTime:
                    $ref: '#/components/schemas/Time'

        PatchTimeBookingCommitResponse:
            description: ''
            required:
                - locks
            type: object
            properties:
                locks:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/TimeBookingLockDate'

        TimeBookingLockDate:
            description: ''
            required:
                - userlock
                - bosslock
                - date
                - employee
            type: object
            properties:
                userlock:
                    description: 'Enables/disables the user lock. The user lock is used to lock a given date span for the current user. This prohibits any further editing of timebookings.'
                    type: boolean
                bosslock:
                    description: 'Enables/disables the boss lock. The boss lock is used by the admin to lock and finalize a given date span for a user. This prohibits any further editing of timebookings by the user.'
                    type: boolean
                date:
                    type: string
                    format: date
                    description: 'Example: 2022-12-31'
                    example: '2022-12-31'
                employee:
                    format: int64
                    description: 'Employee ID'
                    type: integer

        PUTPOSTProjectTimeSpansRequest:
            description: ''
            required:
                - date
                - project
                - timeSpans
            type: object
            properties:
                date:
                    type: string
                    format: date
                    description: 'Date of project time span e.g. 2022-01-30'
                    example: '2022-01-30'
                project:
                    $ref: '#/components/schemas/ProjectID'
                timeSpans:
                    description: 'Timespans'
                    type: array
                    items:
                        $ref: '#/components/schemas/ProjectTimeSpan'
        GETUserinfoResponse:
            description: ''
            required:
                - email
            type: object
            properties:
                email:
                    description: ''
                    type: string
    responses:
        ErrorResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TimeBookingError'
            description: An error occured.

    securitySchemes:
        ApiKey:
            type: apiKey
            name: Authorization
            in: header

security:
    -   ApiKey: []
